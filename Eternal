local EternalUI = {}

function EternalUI:CreateWindow(title)
    local UI = {}

    -- Main ScreenGui
    UI.ScreenGui = Instance.new("ScreenGui")
    UI.ScreenGui.Name = "Eternal"
    UI.ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    UI.ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

    -- Main Frame
    UI.MainFrame = Instance.new("Frame")
    UI.MainFrame.BorderSizePixel = 0
    UI.MainFrame.BackgroundColor3 = Color3.fromRGB(21, 18, 27)
    UI.MainFrame.Size = UDim2.new(0, 500, 0, 388)
    UI.MainFrame.Position = UDim2.new(0.36619, 0, 0.33092, 0)
    UI.MainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    UI.MainFrame.Parent = UI.ScreenGui

    -- UI Stroke
    local UIStroke = Instance.new("UIStroke", UI.MainFrame)
    UIStroke.Thickness = 1.5
    UIStroke.Color = Color3.fromRGB(9, 191, 167)

    -- UICorner
    local UICorner = Instance.new("UICorner", UI.MainFrame)
    UICorner.CornerRadius = UDim.new(0, 3)

    -- Title Holder
    UI.TitleHolder = Instance.new("Frame")
    UI.TitleHolder.BorderSizePixel = 0
    UI.TitleHolder.BackgroundColor3 = Color3.fromRGB(21, 18, 27)
    UI.TitleHolder.Size = UDim2.new(0, 500, 0, 23)
    UI.TitleHolder.Position = UDim2.new(-0.00181, 0, -0.09812, 0)
    UI.TitleHolder.BorderColor3 = Color3.fromRGB(0, 0, 0)
    UI.TitleHolder.Name = "TitleHolder"
    UI.TitleHolder.Parent = UI.MainFrame

    local TitleUIStroke = Instance.new("UIStroke", UI.TitleHolder)
    TitleUIStroke.Thickness = 1.5
    TitleUIStroke.Color = Color3.fromRGB(9, 191, 167)

    UI.TitleLabel = Instance.new("TextLabel", UI.TitleHolder)
    UI.TitleLabel.BorderSizePixel = 0
    UI.TitleLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    UI.TitleLabel.TextSize = 14
    UI.TitleLabel.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    UI.TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    UI.TitleLabel.BackgroundTransparency = 1
    UI.TitleLabel.Size = UDim2.new(0, 499, 0, 23)
    UI.TitleLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
    UI.TitleLabel.Text = title or "Eternal UI"
    
    local TitleUICorner = Instance.new("UICorner", UI.TitleHolder)
    TitleUICorner.CornerRadius = UDim.new(0, 3)

    -- Status bars
    UI.PltStatus1 = Instance.new("Frame")
    UI.PltStatus1.BorderSizePixel = 0
    UI.PltStatus1.BackgroundColor3 = Color3.fromRGB(33, 30, 38)
    UI.PltStatus1.Size = UDim2.new(0, 232, 0, 28)
    UI.PltStatus1.Position = UDim2.new(0.036, 0, 0.03351, 0)
    UI.PltStatus1.BorderColor3 = Color3.fromRGB(0, 0, 0)
    UI.PltStatus1.Name = "PltStatus"
    UI.PltStatus1.Parent = UI.MainFrame

    local Status1UIStroke = Instance.new("UIStroke", UI.PltStatus1)
    Status1UIStroke.Thickness = 1.5
    Status1UIStroke.Color = Color3.fromRGB(44, 44, 44)

    UI.PingLabel = Instance.new("TextLabel", UI.PltStatus1)
    UI.PingLabel.BorderSizePixel = 0
    UI.PingLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    UI.PingLabel.TextSize = 14
    UI.PingLabel.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    UI.PingLabel.TextColor3 = Color3.fromRGB(9, 191, 167)
    UI.PingLabel.BackgroundTransparency = 1
    UI.PingLabel.Size = UDim2.new(0, 231, 0, 28)
    UI.PingLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
    UI.PingLabel.Text = "Ping: 0ms"

    UI.PltStatus2 = Instance.new("Frame")
    UI.PltStatus2.BorderSizePixel = 0
    UI.PltStatus2.BackgroundColor3 = Color3.fromRGB(33, 30, 38)
    UI.PltStatus2.Size = UDim2.new(0, 232, 0, 28)
    UI.PltStatus2.Position = UDim2.new(0.5, 0, 0.03351, 0)
    UI.PltStatus2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    UI.PltStatus2.Name = "PltStatus"
    UI.PltStatus2.Parent = UI.MainFrame

    local Status2UIStroke = Instance.new("UIStroke", UI.PltStatus2)
    Status2UIStroke.Thickness = 1.5
    Status2UIStroke.Color = Color3.fromRGB(44, 44, 44)

    UI.StatusLabel = Instance.new("TextLabel", UI.PltStatus2)
    UI.StatusLabel.TextWrapped = true
    UI.StatusLabel.BorderSizePixel = 0
    UI.StatusLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    UI.StatusLabel.TextSize = 14
    UI.StatusLabel.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    UI.StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    UI.StatusLabel.BackgroundTransparency = 1
    UI.StatusLabel.Size = UDim2.new(0, 232, 0, 28)
    UI.StatusLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
    UI.StatusLabel.Text = "Status: Ready"

    -- Tab system
    UI.Tabs = {}
    UI.CurrentTab = nil

    -- Make window draggable
    local UserInputService = game:GetService("UserInputService")
    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        UI.MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    UI.TitleHolder.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = UI.MainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    UI.TitleHolder.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)

    -- Update ping
    spawn(function()
        while wait(1) do
            local ping = math.floor(game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue())
            UI.PingLabel.Text = "Ping: "..ping.."ms"
        end
    end)

    -- Function to create a new tab
    function UI:CreateTab(name)
        local tab = {}
        tab.Name = name
        
        -- Create button for the tab
        tab.Button = Instance.new("TextButton")
        tab.Button.BorderSizePixel = 0
        tab.Button.TextSize = 14
        tab.Button.TextColor3 = Color3.fromRGB(255, 255, 255)
        tab.Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        tab.Button.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
        tab.Button.Size = UDim2.new(0, 114, 0, 28)
        tab.Button.BackgroundTransparency = 1
        tab.Button.Name = "Btn"..(#UI.Tabs + 1)
        tab.Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
        tab.Button.Text = name
        tab.Button.Parent = UI.MainFrame
        
        -- Position the button
        if #UI.Tabs == 0 then
            tab.Button.Position = UDim2.new(0.036, 0, 0.89948, 0)
        elseif #UI.Tabs == 1 then
            tab.Button.Position = UDim2.new(0.272, 0, 0.89948, 0)
        elseif #UI.Tabs == 2 then
            tab.Button.Position = UDim2.new(0.5, 0, 0.89948, 0)
        elseif #UI.Tabs == 3 then
            tab.Button.Position = UDim2.new(0.74, 0, 0.89948, 0)
        else
            -- If more than 4 tabs, stack them vertically
            tab.Button.Position = UDim2.new(0.036, 0, 0.89948 + (0.1 * (#UI.Tabs - 3)), 0)
        end
        
        -- Create the content frame for the tab
        tab.Frame = Instance.new("Frame")
        tab.Frame.BorderSizePixel = 0
        tab.Frame.BackgroundColor3 = Color3.fromRGB(33, 30, 38)
        tab.Frame.Size = UDim2.new(0, 467, 0, 285)
        tab.Frame.Position = UDim2.new(0.034, 0, 0.13144, 0)
        tab.Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
        tab.Frame.Name = name.."UI"
        tab.Frame.BackgroundTransparency = 1
        tab.Frame.Parent = UI.MainFrame
        
        local FrameUICorner = Instance.new("UICorner", tab.Frame)
        FrameUICorner.CornerRadius = UDim.new(0, 3)
        
        local FrameUIStroke = Instance.new("UIStroke", tab.Frame)
        FrameUIStroke.Thickness = 1.5
        FrameUIStroke.Color = Color3.fromRGB(44, 44, 44)
        
        -- Hide by default
        tab.Frame.Visible = false
        
        -- Button click event
        tab.Button.MouseButton1Click:Connect(function()
            for _, otherTab in pairs(UI.Tabs) do
                otherTab.Frame.Visible = false
                otherTab.Button.TextColor3 = Color3.fromRGB(255, 255, 255)
            end
            tab.Frame.Visible = true
            tab.Button.TextColor3 = Color3.fromRGB(9, 191, 167)
            UI.CurrentTab = tab
        end)
        
        -- Function to create a toggle
        function tab:CreateToggle(name, callback)
            local toggle = {}
            toggle.Name = name
            toggle.Value = false
            
            local ToggleFrame = Instance.new("Frame")
            ToggleFrame.BorderSizePixel = 0
            ToggleFrame.BackgroundColor3 = Color3.fromRGB(21, 18, 27)
            ToggleFrame.Size = UDim2.new(0, 18, 0, 18)
            ToggleFrame.Position = UDim2.new(0.05, 0, 0.1 + (#self.Frame:GetChildren() * 0.08), 0)
            ToggleFrame.Parent = self.Frame
            
            local ToggleUICorner = Instance.new("UICorner", ToggleFrame)
            ToggleUICorner.CornerRadius = UDim.new(0, 3)
            
            local ToggleUIStroke = Instance.new("UIStroke", ToggleFrame)
            ToggleUIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
            ToggleUIStroke.Thickness = 1.5
            ToggleUIStroke.Color = Color3.fromRGB(44, 44, 44)
            
            local ToggleText = Instance.new("TextLabel", ToggleFrame)
            ToggleText.BorderSizePixel = 0
            ToggleText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ToggleText.TextSize = 14
            ToggleText.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
            ToggleText.TextColor3 = Color3.fromRGB(255, 255, 255)
            ToggleText.BackgroundTransparency = 1
            ToggleText.Size = UDim2.new(0, 100, 0, 18)
            ToggleText.Position = UDim2.new(1.5, 0, 0, 0)
            ToggleText.BorderColor3 = Color3.fromRGB(0, 0, 0)
            ToggleText.Text = name
            
            ToggleFrame.MouseButton1Click:Connect(function()
                toggle.Value = not toggle.Value
                if toggle.Value then
                    ToggleFrame.BackgroundColor3 = Color3.fromRGB(9, 191, 167)
                else
                    ToggleFrame.BackgroundColor3 = Color3.fromRGB(21, 18, 27)
                end
                if callback then callback(toggle.Value) end
            end)
            
            return toggle
        end
        
        -- Function to create a slider
        function tab:CreateSlider(name, min, max, callback)
            local slider = {}
            slider.Name = name
            slider.Value = min
            
            local SliderFrame = Instance.new("Frame")
            SliderFrame.BorderSizePixel = 0
            SliderFrame.BackgroundColor3 = Color3.fromRGB(21, 18, 27)
            SliderFrame.Size = UDim2.new(0, 204, 0, 14)
            SliderFrame.Position = UDim2.new(0.05, 0, 0.1 + (#self.Frame:GetChildren() * 0.08), 0)
            SliderFrame.Parent = self.Frame
            
            local SliderUICorner = Instance.new("UICorner", SliderFrame)
            SliderUICorner.CornerRadius = UDim.new(0, 3)
            
            local SliderUIStroke = Instance.new("UIStroke", SliderFrame)
            SliderUIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
            SliderUIStroke.Thickness = 1.5
            SliderUIStroke.Color = Color3.fromRGB(44, 44, 44)
            
            local SliderTitle = Instance.new("TextLabel", SliderFrame)
            SliderTitle.BorderSizePixel = 0
            SliderTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SliderTitle.TextSize = 14
            SliderTitle.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
            SliderTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderTitle.BackgroundTransparency = 1
            SliderTitle.Size = UDim2.new(0, 100, 0, 8)
            SliderTitle.Position = UDim2.new(0, 0, -1.5, 0)
            SliderTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
            SliderTitle.Text = name
            
            local SliderButton = Instance.new("TextButton", SliderFrame)
            SliderButton.BorderSizePixel = 0
            SliderButton.TextSize = 14
            SliderButton.TextColor3 = Color3.fromRGB(0, 0, 0)
            SliderButton.BackgroundColor3 = Color3.fromRGB(9, 191, 167)
            SliderButton.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
            SliderButton.Size = UDim2.new(0, 18, 0, 14)
            SliderButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
            SliderButton.Text = ""
            SliderButton.ZIndex = 2
            
            local SliderUICorner2 = Instance.new("UICorner", SliderButton)
            SliderUICorner2.CornerRadius = UDim.new(0, 3)
            
            local SliderUIStroke2 = Instance.new("UIStroke", SliderButton)
            SliderUIStroke2.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
            SliderUIStroke2.Thickness = 1.5
            SliderUIStroke2.Color = Color3.fromRGB(44, 44, 44)
            
            local SliderValue = Instance.new("TextLabel", SliderFrame)
            SliderValue.BorderSizePixel = 0
            SliderValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SliderValue.TextSize = 14
            SliderValue.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
            SliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderValue.BackgroundTransparency = 1
            SliderValue.Size = UDim2.new(0, 204, 0, 14)
            SliderValue.BorderColor3 = Color3.fromRGB(0, 0, 0)
            SliderValue.Text = tostring(min)
            
            local dragging = false
            
            local function updateSlider(input)
                local pos = UDim2.new(
                    math.clamp((input.Position.X - SliderFrame.AbsolutePosition.X) / SliderFrame.AbsoluteSize.X, 0, 1),
                    0,
                    0,
                    0
                )
                SliderButton.Position = pos
                local value = math.floor(((pos.X.Scale * max) + min))
                SliderValue.Text = tostring(value)
                slider.Value = value
                if callback then callback(value) end
            end
            
            SliderButton.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true
                end
            end)
            
            SliderButton.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
            
            SliderFrame.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    updateSlider(input)
                end
            end)
            
            game:GetService("UserInputService").InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    updateSlider(input)
                end
            end)
            
            return slider
        end
        
        -- Function to create a button
        function tab:CreateButton(name, callback)
            local button = {}
            button.Name = name
            
            local ButtonFrame = Instance.new("TextButton")
            ButtonFrame.BorderSizePixel = 0
            ButtonFrame.TextSize = 14
            ButtonFrame.TextColor3 = Color3.fromRGB(255, 255, 255)
            ButtonFrame.BackgroundColor3 = Color3.fromRGB(33, 30, 38)
            ButtonFrame.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
            ButtonFrame.Size = UDim2.new(0, 204, 0, 28)
            ButtonFrame.Position = UDim2.new(0.05, 0, 0.1 + (#self.Frame:GetChildren() * 0.1), 0)
            ButtonFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            ButtonFrame.Text = name
            ButtonFrame.Parent = self.Frame
            
            local ButtonUICorner = Instance.new("UICorner", ButtonFrame)
            ButtonUICorner.CornerRadius = UDim.new(0, 3)
            
            local ButtonUIStroke = Instance.new("UIStroke", ButtonFrame)
            ButtonUIStroke.Thickness = 1.5
            ButtonUIStroke.Color = Color3.fromRGB(44, 44, 44)
            
            ButtonFrame.MouseButton1Click:Connect(function()
                if callback then callback() end
            end)
            
            return button
        end
        
        -- Function to create a label
        function tab:CreateLabel(text)
            local label = {}
            label.Text = text
            
            local LabelFrame = Instance.new("TextLabel")
            LabelFrame.BorderSizePixel = 0
            LabelFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            LabelFrame.TextSize = 14
            LabelFrame.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
            LabelFrame.TextColor3 = Color3.fromRGB(255, 255, 255)
            LabelFrame.BackgroundTransparency = 1
            LabelFrame.Size = UDim2.new(0, 204, 0, 20)
            LabelFrame.Position = UDim2.new(0.05, 0, 0.1 + (#self.Frame:GetChildren() * 0.08), 0)
            LabelFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            LabelFrame.Text = text
            LabelFrame.Parent = self.Frame
            
            return label
        end
        
        -- Add to tabs table
        table.insert(UI.Tabs, tab)
        
        -- If this is the first tab, make it active
        if #UI.Tabs == 1 then
            tab.Frame.Visible = true
            tab.Button.TextColor3 = Color3.fromRGB(9, 191, 167)
            UI.CurrentTab = tab
        end
        
        return tab
    end
    
    -- Function to update status
    function UI:UpdateStatus(text)
        UI.StatusLabel.Text = text
    end
    
    return UI
end

return EternalUI
